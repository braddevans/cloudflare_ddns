#!/usr/bin/env bash

set -e

if [ "$EUID" -ne 0 ]
then
  echo "Please run as root"
  exit 1
fi

#take config as parameter
source $1

check_records () {

  for zone_name in $(echo $domains | jq -r 'keys|.[]' ); do
    echo "Dom√§n $zone_name"

      zone_id=$(curl -4 -s \
          -X GET "https://api.cloudflare.com/client/v4/zones?name=$zone_name&status=active" \
          -H "Content-Type: application/json" \
          -H "X-Auth-Email: $email" \
          -H "Authorization: Bearer $api_token" \
          | jq -r '{"result"}[] | .[0] | .id')

      for sub in $(echo $domains | jq -r ".[\"${zone_name}\"]|.[]"); do 
        if [[ $sub == "@" ]] 
          then
            dns_record=$zone_name
        else
          dns_record="$sub.$zone_name"
            fi

            record_data=$(curl -s \
                -X GET "https://api.cloudflare.com/client/v4/zones/$zone_id/dns_records?type=$2&name=$dns_record"  \
                -H "Content-Type: application/json" \
                -H "X-Auth-Email: $email" \
                -H "Authorization: Bearer $api_token")

            record_id=$(jq -r '{"result"}[] | .[0] | .id' <<< $record_data)
            cf_ip=$(jq -r '{"result"}[] | .[0] | .content' <<< $record_data)

            echo "$dns_record cf_ip: $cf_ip"

            if [[ $cf_ip != $1 ]]; then
              result=$(curl -s \
                  -X PUT "https://api.cloudflare.com/client/v4/zones/$zone_id/dns_records/$record_id" \
                  -H "Content-Type: application/json" \
                  -H "X-Auth-Email: $email" \
                  -H "Authorization: Bearer $api_token" \
                  --data "{\"type\":\"$2\",\"name\":\"$dns_record\",\"content\":\"$1\",\"ttl\":1,\"proxied\":false}" \
                  | jq .success)
                     if [[ $result == "true" ]]; then
                       echo "$dns_record updated to: $1"
                         echo "$(date -Iminutes) $2: $dns_record updated to: $1" >> $logfile
                     else
                       echo "IPV4: $dns_record update failed"
                         echo "$(date -Iminutes) $2: $dns_record update failed" >> $logfile
                         fi
            else
              echo "$dns_record already up do date"
#echo "$(date -Iminutes) $2: $dns_record already up do date" >> $logfile
                fi
                done
                done

}

if ext_ip=$(curl -s -X GET -4 https://ifconfig.co); then
echo "Found IPV4: $ext_ip"
check_records $ext_ip 'A'
fi

if ext_ip=$(curl -s -X GET -6 https://ifconfig.co); then
echo "Found IPV6: $ext_ip"
check_records $ext_ip 'AAAA'
fi

